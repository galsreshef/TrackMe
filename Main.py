"""         Created By Gal Reshef S         """

# GUI module generated by PAGE version 4.25
#  in conjunction with Tcl version 8.6
#    Aug 25, 2019 05:35:01 PM +0300  platform: Windows NT

import sys
import tkMessageBox
import Main_Support
import Video_Tracker as vt
from tkFileDialog import askopenfilename
from tkinter import IntVar

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk
try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True


def vp_start_gui():
    """Starting point when module is the main routine."""
    global val, w, root
    root = tk.Tk()
    Main_Support.set_Tk_var()
    top = Toplevel1(root)
    Main_Support.init(root, top)
    root.mainloop()


w = None


# noinspection SpellCheckingInspection
def create_Toplevel1(root, *args, **kwargs):
    """Starting point when module is imported by another program."""
    global w, w_win, rt
    rt = root
    w = tk.Toplevel(root)
    Main_Support.set_Tk_var()
    top = Toplevel1(w)
    Main_Support.init(w, top, *args, **kwargs)
    return w, top


def destroy_Toplevel1():
    global w
    w.destroy()
    w = None


# noinspection SpellCheckingInspection
class Toplevel1:
    def __init__(self, top=None):
        """This class configures and populates the toplevel window.
           top is the toplevel containing window.
           :type top: object"""
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        font11 = "-family {Segoe UI} -size 10 -weight bold -slant " \
                 "roman -underline 0 -overstrike 0"
        font20 = "-family {Segoe UI Symbol} -size 16 -weight bold " \
                 "-slant roman -underline 1 -overstrike 0"
        font21 = "-family {Segoe UI} -size 10 -weight normal -slant " \
                 "roman -underline 0 -overstrike 0"
        self.style = ttk.Style()

        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=[('selected', _compcolor), ('active', _ana2color)])

        top.geometry("483x273+630+99")
        top.title("TrackMe")
        top.iconbitmap("Icon.ico")
        top.configure(background="#2ed9d6")

        self.menuBar = tk.Menu(top, font="TkMenuFont", bg=_bgcolor, fg=_fgcolor)
        top.configure(menu=self.menuBar)
        root.resizable(False, False)
        fileName = " "

        def fileDialog():
            global fileName
            fileName = askopenfilename(initialdir="/", title="Select Video File",
                                       filetype=(("MPEG", "*.mp4"), ("AVI", "*.avi"), ("MKV", "*.mkv")))
            path_Label = tk.Label(top, text='')
            path_Label.place(relx=0.435, rely=0.514, height=21, width=234)
            path_Label.configure(background="#ffffff", disabledforeground="#a3a3a3", foreground="#000000",
                                 text=fileName)

        def createBrowse():
            self.browse_Button = tk.Button(top)
            self.browse_Button.place(relx=0.228, rely=0.514, height=24, width=79)
            self.browse_Button.configure(activebackground="#ececec", activeforeground="#000000", background="#d9d9d9",
                                         disabledforeground="#a3a3a3", foreground="#000000",
                                         highlightbackground="#d9d9d9",
                                         highlightcolor='black', pady='0', text='Browse',
                                         command=fileDialog)

        def startVideo():
            global fileName
            if not self.contourEntry.get():
                contourSize = 1700
            else:
                contourSize = int(self.contourEntry.get())
            radioVal = v.get()
            if radioVal == 1:  # vtest
                vt.gaussianBlur("vtest.avi", contourSize)
            elif radioVal == 2:  # live feed
                vt.gaussianBlur(0, contourSize)
            elif radioVal == 3:  # browse
                createBrowse()
                vt.gaussianBlur(fileName, contourSize)
            else:
                tkMessageBox.showerror("Error", "Please select a radio button")

        self.contourLabel = tk.Label(top)
        self.contourLabel.place(relx=0.663, rely=0.33, height=21, width=72)
        self.contourLabel.configure(background="#2ed9d6", disabledforeground="#a3a3a3", foreground="#000000",
                                    text='Value')

        self.contourEntry = tk.Entry(top)
        self.contourEntry.place(relx=0.683, rely=0.403, height=20, relwidth=0.112)
        self.contourEntry.configure(background="white", disabledforeground="#a3a3a3",
                                    font="-family {Courier New} -size 10",
                                    foreground="#000000", insertbackground="black")

        self.start_Button = tk.Button(top)
        self.start_Button.place(relx=0.041, rely=0.714, height=24, width=75)
        self.start_Button.configure(activebackground="#ececec", activeforeground="#000000", background="#d9d9d9",
                                    disabledforeground="#a3a3a3", foreground="#000000", highlightbackground="#d9d9d9",
                                    highlightcolor="black", pady="0", text='Start', command=startVideo)

        self.welcome_Label = tk.Label(top)
        self.welcome_Label.place(relx=0.259, rely=0.0, height=31, width=242)
        self.welcome_Label.configure(background="#2ed9d6", disabledforeground="#a3a3a3", font=font20,
                                     foreground="#000000", text='Welcome to TrackME')

        self.videoSource_Label = tk.Label(top)
        self.videoSource_Label.place(relx=0.021, rely=0.100, height=23, width=171)
        self.videoSource_Label.configure(background="#2ed9d6", disabledforeground="#a3a3a3", font=font11,
                                         foreground="#000000", text='Please Select video source:')

        self.exit_Button = tk.Button(top, command=exit)
        self.exit_Button.place(relx=0.787, rely=0.714, height=24, width=79)
        self.exit_Button.configure(activebackground="#ececec", activeforeground="#000000", background="#d9d9d9",
                                   disabledforeground="#a3a3a3", foreground="#000000", highlightbackground="#d9d9d9",
                                   highlightcolor="black", pady="0", text='Exit')

        self.creators_Label = tk.Label(top)
        self.creators_Label.place(relx=0.28, rely=0.907, height=21, width=230)
        self.creators_Label.configure(background="#2ed9d6", disabledforeground="#a3a3a3", font=font21,
                                      foreground="#000000", text='Created by: Gal Reshef S')

        v = IntVar(value=0)
        self.vtest_radio = tk.Radiobutton(top, variable=v, value=1)  # , command=lambda: clicked(v.get()))
        self.vtest_radio.place(relx=0.0002, rely=0.214, relheight=0.042, relwidth=0.306)
        self.vtest_radio.configure(activebackground="#ececec", activeforeground="#000000", background="#2ed9d6",
                                   disabledforeground="#a3a3a3", foreground="#000000", highlightbackground="#d9d9d9",
                                   highlightcolor="black", justify='left', text='cv2 vtest.avi video')

        self.lFeed_radiob = tk.Radiobutton(top, variable=v, value=2)  # , command=lambda: clicked(v.get()))
        self.lFeed_radiob.place(relx=0.021, rely=0.364, relheight=0.042, relwidth=0.207)
        self.lFeed_radiob.configure(activebackground="#ececec", activeforeground="#000000", background="#2ed9d6",
                                    disabledforeground="#a3a3a3", foreground="#000000", highlightbackground="#d9d9d9",
                                    highlightcolor="black", justify='left', text='Local Camera')

        self.file_radioB = tk.Radiobutton(top, variable=v, value=3)  # , command=lambda: clicked(v.get()))
        self.file_radioB.place(relx=0.021, rely=0.514, relheight=0.042, relwidth=0.166)
        self.file_radioB.configure(activebackground="#ececec", activeforeground="#000000", background="#2ed9d6",
                                   disabledforeground="#a3a3a3", foreground="#000000", highlightbackground="#d9d9d9",
                                   highlightcolor="black", justify='left', text='Select File', command=createBrowse)


if __name__ == '__main__':
    vp_start_gui()
